// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"github.com/google/wire"
	"github.com/sirupsen/logrus"
	"gorm.io/gorm"
	"ms-scaffold/api/controller"
	"ms-scaffold/api/helper"
	"ms-scaffold/api/middleware"
	"ms-scaffold/api/repository"
	"ms-scaffold/api/service"
)

// Injectors from injector.go:

func InitScaffold(db *gorm.DB) controller.ScaffoldController {
	scaffoldRepository := repository.NewScaffoldRepository(db)
	scaffoldService := service.NewScaffoldService(scaffoldRepository)
	jwtService := service.NewJWTService()
	logger := logrus.New()
	log := helper.NewLog(logger)
	scaffoldController := controller.NewScaffoldController(scaffoldService, jwtService, log)
	return scaffoldController
}

func InitJWTMiddleware() middleware.AuthorizeJWTMiddleware {
	jwtService := service.NewJWTService()
	authorizeJWTMiddleware := middleware.NewAuthorizeJWTMiddleware(jwtService)
	return authorizeJWTMiddleware
}

// injector.go:

var jwtMiddlewareSet = wire.NewSet(service.NewJWTService, middleware.NewAuthorizeJWTMiddleware)

var scaffoldSet = wire.NewSet(logrus.New, helper.NewLog, controller.NewScaffoldController, repository.NewScaffoldRepository, service.NewJWTService, service.NewScaffoldService)
